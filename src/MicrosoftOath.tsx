import React from 'react';
import { Configuration, PublicClientApplication } from '@azure/msal-browser';
import { useIsAuthenticated } from '@azure/msal-react';

const msalConfig: Configuration = {
  auth: {
    clientId: '2f9b4faf-5895-49db-ad35-40120df164f9',
    authority:
      'https://login.microsoftonline.com/164ba61e-39ec-4f5d-89ff-aa1f00a521b4',
    // authority URL generated with CPP's tenant ID from https://www.whatismytenantid.com/
  },
};

export const msalInstance = new PublicClientApplication(msalConfig);

// private launchWebAuthFlow(url: string): Promise<string> {
//   const {webAuthFlowOptions} = this.options;
//   return new Promise((resolve, reject) => {
// chrome.identity.launchWebAuthFlow(
//   {...webAuthFlowOptions, url},
//   callbackURL => {
//     if (chrome.runtime.lastError) {
//       return reject(new Error(chrome.runtime.lastError.message));
//     }

//     return resolve(callbackURL);
//   },
// );
//   });
// }
// Sample autogenerated code for chrome extension redirect URL

export default function MicrosoftOAuth(): JSX.Element {
  const isAuthenticated = useIsAuthenticated();

  return (
    <React.Fragment>
      <p>Anyone can see this paragraph.</p>
      {isAuthenticated && <p>At least one account is signed in!</p>}
      {!isAuthenticated && <p>No users are signed in!</p>}
    </React.Fragment>
  );
}
